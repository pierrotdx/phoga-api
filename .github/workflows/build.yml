name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    environment: tests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - uses: "google-github-actions/auth@v2"
        with:
          project_id: ${{ secrets.GC_PROJECT_ID }}
          workload_identity_provider: "projects/${{ secrets.GC_PROJECT_ID }}/locations/global/workloadIdentityPools/${{ secrets.GC_POOL }}/providers/${{ secrets.GC_ID_PROVIDER }}"
          service_account: ${{ secrets.GC_SERVICE_ACCOUNT }}
      - name: Create .env with GitHub Secrets
        run: |
          touch .env
          echo MONGO_URL=${{ secrets.MONGO_URL }} >> .env
          echo MONGO_DB=${{ secrets.MONGO_DB }} >> .env
          echo MONGO_PHOTO_BASE_COLLECTION=${{ secrets.MONGO_PHOTO_BASE_COLLECTION }} >> .env
          echo MONGO_TAG_COLLECTION=${{ secrets.MONGO_TAG_COLLECTION }} >> .env
          echo OAUTH2_AUTHORIZATION_SERVER_DOMAIN=${{ secrets.OAUTH2_AUTHORIZATION_SERVER_DOMAIN }} >> .env
          echo OAUTH2_AUDIENCE=${{ secrets.OAUTH2_AUDIENCE }} >> .env
          echo OAUTH2_CLIENT_ID=${{ secrets.OAUTH2_CLIENT_ID }} >> .env
          echo OAUTH2_CLIENT_SECRET=${{ secrets.OAUTH2_CLIENT_SECRET }} >> .env
          echo OAUTH2_USER_NAME=${{ secrets.OAUTH2_USER_NAME }} >> .env
          echo OAUTH2_USER_PASSWORD=${{ secrets.OAUTH2_USER_PASSWORD }} >> .env
          echo GC_PHOTO_IMAGES_BUCKET=${{ secrets.GC_PHOTO_IMAGES_BUCKET }} >> .env
          echo GCS_API_ENDPOINT=${{ secrets.GCS_API_ENDPOINT }} >> .env
      - name: Install dependencies
        run: npm ci
      - name: Test and coverage
        run: npm run test:ci
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
